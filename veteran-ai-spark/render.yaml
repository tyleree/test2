# Render.com deployment configuration
services:
  - type: web
    name: veteran-ai-rag-pipeline
    env: python
    plan: starter  # Upgrade to standard/pro for production
    buildCommand: "pip install -r requirements.txt"
    startCommand: "uvicorn app.main:app --host 0.0.0.0 --port $PORT"
    envVars:
      - key: PYTHON_VERSION
        value: 3.11
      - key: OPENAI_API_KEY
        sync: false  # Set this in Render dashboard
      - key: PINECONE_API_KEY  
        sync: false  # Set this in Render dashboard
      - key: PINECONE_ENV
        sync: false  # Set this in Render dashboard
      - key: PINECONE_INDEX
        sync: false  # Set this in Render dashboard
      - key: EMBEDDING_MODEL
        value: text-embedding-3-large  # Change based on your Pinecone index
      - key: MODEL_BIG
        value: gpt-4o
      - key: MODEL_SMALL
        value: gpt-4o-mini
      - key: CACHE_DB_PATH
        value: /opt/render/project/data/cache.sqlite
      - key: FAISS_PATH
        value: /opt/render/project/data/query_cache.faiss
      - key: SIM_THRESHOLD
        value: "0.92"
      - key: DOC_OVERLAP_MIN
        value: "0.6"
      - key: CACHE_EMBEDDING_MODEL
        value: all-MiniLM-L6-v2
    # Persistent disk for cache storage
    disk:
      name: rag-cache-disk
      mountPath: /opt/render/project/data
      sizeGB: 1
    healthCheckPath: /healthz
    
  # Optional: Separate Flask frontend service
  - type: web
    name: veteran-ai-frontend
    env: python
    plan: starter
    buildCommand: "pip install -r ../requirements.txt"
    startCommand: "python ../app.py"
    rootDir: ./
    envVars:
      - key: PYTHON_VERSION
        value: 3.11
      - key: RAG_PIPELINE_URL
        value: https://veteran-ai-rag-pipeline.onrender.com
    healthCheckPath: /
